version: '3'
services:
  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_DIRS: "/tmp/kafka-logs"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  nifi:
    build:
      context: ./nifi
      dockerfile: Dockerfile
    hostname: nifi
    container_name: nifi
    ports:
      - "8080:8080"
    volumes:
      - ./nifi:/opt/aggregator
  schema-registry:
    image: confluentinc/cp-schema-registry:6.1.1
    hostname: schema-registry
    container_name: schema-registry
    restart: always
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
    ports:
      - 8081:8081
    depends_on:
      - zookeeper
  schema-registry-ui:
    image: landoop/schema-registry-ui:latest
    hostname: schema-registry-ui
    container_name: schema-registry-ui
    hostname: schema-registry-ui
    environment:
      SCHEMAREGISTRY_URL: http://schema-registry:8081
      ALLOW_GLOBAL: "true"
      ALLOW_TRANSITIVE: "true"
      ALLOW_DELETION: "true"
      READONLY_MODE: "true"
      PROXY: "true"
    ports:
      - "8000:8000"
    depends_on:
      - schema-registry
  zookeeper:
    image: zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181"
    logging:
      driver: none
    working_dir: /
