{
	"info": {
		"_postman_id": "c9efa138-09a6-40f7-8387-0591bbcb7fcd",
		"name": "NGSI-LD Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Entity",
			"item": [
				{
					"name": "Create Vehicle",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Link",
								"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"urn:ngsi-ld:Vehicle:A100\",\n\t\"type\": \"Vehicle\",\n\t\"brandName\": {\n\t\t\"type\": \"Property\",\n\t\t\"value\": \"Mercedes\"\n\t},\n\t\"speed\": {\n\t\t\"type\": \"Property\",\n\t\t\"value\": 80\n\t}\n}"
						},
						"url": {
							"raw": "http://{{broker}}/ngsi-ld/v1/entities/",
							"protocol": "http",
							"host": [
								"{{broker}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							]
						},
						"description": "New context data entities can be created by making a POST request to the `/ngsi-ld/v1/entities` endpoint and supply an `@context` along with structured **NGSI-LD** data.\n\nThe first request will take some time, as the context broker must navigate and load all of the files mentioned in the\n`@context`.\n\nSince the `Content-Type: application/ld+json` the `@context` is supplied in the body of the request. As with all **NGSI-LD** interactions, the core **NGSI-LD** `@context` ([`https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld`](https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld) is implicitly included as well.)\n\nThis means that the actual `@context` is:\n\n```jsonld\n{\n    \"@context\": [\n        \"http://context-provider:3000/data-models/ngsi-context.jsonld\",\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld\"\n    ]\n}\n```\n\nwith the core `@context` being processed **last** and therefore overriding any terms previously defined with the same `@id`."
					},
					"response": []
				},
				{
					"name": "Delete Entity Data by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{broker}}/ngsi-ld/v1/entities/urn:ngsi-ld:Vehicle:A100",
							"protocol": "http",
							"host": [
								"{{broker}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:Vehicle:A100"
							]
						},
						"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
					},
					"response": []
				},
				{
					"name": "Partial Attribute Update",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": \"120\",\r\n    \"type\": \"Property\"\r\n}"
						},
						"url": {
							"raw": "http://{{broker}}/ngsi-ld/v1/entities/urn:ngsi-ld:Vehicle:A100/attrs/speed",
							"protocol": "http",
							"host": [
								"{{broker}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:Vehicle:A100",
								"attrs",
								"speed"
							]
						},
						"description": "partially update the attribute of entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Subscription",
			"item": [
				{
					"name": "Create subscription to Vehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"subscription1\", pm.response.headers.get(\"Location\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"Subscription\",\r\n\t\"entities\": [{\r\n\t\t\"type\": \"Vehicle\"\r\n\t}],\r\n    \"watchedAttributes\": [\"brandName\"],\r\n\t\"notification\": {\r\n\t\t\"endpoint\": {\r\n\t\t\t\"uri\": \"http://consumer:8080/notify\",\r\n\t\t\t\"accept\": \"application/json\"\r\n\t\t}\r\n\t}\r\n}"
						},
						"url": {
							"raw": "http://{{broker}}/ngsi-ld/v1/subscriptions/",
							"protocol": "http",
							"host": [
								"{{broker}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"subscriptions",
								""
							]
						},
						"description": "create subscription with context in payload"
					},
					"response": []
				},
				{
					"name": "Query all subscriptions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{broker}}/ngsi-ld/v1/subscriptions/",
							"protocol": "http",
							"host": [
								"{{broker}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"subscriptions",
								""
							]
						},
						"description": "for retreiving specific subscription"
					},
					"response": []
				},
				{
					"name": "Delete subscription",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{broker}}{{subscription1}}",
							"protocol": "http",
							"host": [
								"{{broker}}{{subscription1}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Queries",
			"item": [
				{
					"name": "Obtain Entity Data by type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{broker}}/ngsi-ld/v1/entities/?type=Vehicle&options=sysAttrs",
							"protocol": "http",
							"host": [
								"{{broker}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "Vehicle"
								},
								{
									"key": "options",
									"value": "sysAttrs"
								}
							]
						},
						"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
					},
					"response": []
				}
			]
		},
		{
			"name": "Context Source",
			"item": [
				{
					"name": "Create csource with Link header",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"csource1\", pm.response.headers.get(\"Location\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Link",
								"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"ContextSourceRegistration\",\r\n    \"name\": \"cSource1\",\r\n    \"description\": \"cSource Registration for Vehicle\",\r\n    \"information\": [\r\n        {\r\n            \"entities\": [\r\n                {\r\n                \"type\": \"Vehicle\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"endpoint\": \"http://consumer:8080/notify\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{broker}}/ngsi-ld/v1/csourceRegistrations/",
							"protocol": "http",
							"host": [
								"{{broker}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"csourceRegistrations",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Query csource by type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Link",
								"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
							}
						],
						"url": {
							"raw": "http://{{broker}}/ngsi-ld/v1/csourceRegistrations?type=Vehicle",
							"protocol": "http",
							"host": [
								"{{broker}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"csourceRegistrations"
							],
							"query": [
								{
									"key": "type",
									"value": "Vehicle"
								}
							]
						},
						"description": "Get every entity near NEC Labs Heidelberg, with distance up to 360 meters\r\n    NEC Labs Heidelberg coordinates: 8.684783577919006, 49.406131991436396"
					},
					"response": []
				},
				{
					"name": "delete csource",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{broker}}{{csource1}}",
							"protocol": "http",
							"host": [
								"{{broker}}{{csource1}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "context.jsonld",
			"value": "https://fiware.github.io/data-models/full-context.jsonld"
		}
	]
}