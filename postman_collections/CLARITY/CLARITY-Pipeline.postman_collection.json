{
	"info": {
		"_postman_id": "28c50e86-7333-469b-9c50-e731e5e503a3",
		"name": "CLARITY-Pipeline",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21273335"
	},
	"item": [
		{
			"name": "Telemetry",
			"item": [
				{
					"name": "Batch create telemetry",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Link",
								"type": "text",
								"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"urn:ngsi-ld:Device:r1\",\n        \"type\": \"Device\",\n        \"name\": {\n            \"type\": \"Property\",\n            \"value\": \"cEOS\"\n        },\n        \"softwareVersion\": {\n            \"type\": \"Property\",\n            \"value\": \"4.27.3F\"\n        },\n        \"vendor\": {\n            \"type\": \"Property\",\n            \"value\": \"Arista\"\n        }\n    },\n    {\n        \"id\": \"urn:ngsi-ld:Gnmi:r1\",\n        \"type\": \"Gnmi\",\n        \"address\": {\n            \"type\": \"Property\",\n            \"value\": \"172.16.238.11\"\n        },\n        \"port\": {\n            \"type\": \"Property\",\n            \"value\": 6030\n        },\n        \"supportedBy\": {\n            \"type\": \"Relationship\",\n            \"object\": \"urn:ngsi-ld:Device:r1\"\n        }\n    },\n    {\n        \"id\": \"urn:ngsi-ld:Netconf:r1\",\n        \"type\": \"Netconf\",\n        \"address\": {\n            \"type\": \"Property\",\n            \"value\": \"172.16.238.11\"\n        },\n        \"port\": {\n            \"type\": \"Property\",\n            \"value\": 830\n        },\n        \"supportedBy\": {\n            \"type\": \"Relationship\",\n            \"object\": \"urn:ngsi-ld:Device:r1\"\n        }\n    },\n    {\n        \"id\": \"urn:ngsi-ld:Credentials:r1\",\n        \"type\": \"Credentials\",\n        \"authenticates\": [\n            {\n                \"type\": \"Relationship\",\n                \"object\": \"urn:ngsi-ld:Gnmi:r1\",\n                \"datasetId\": \"urn:ngsi-ld:Gnmi:r1\"\n            },\n            {\n                \"type\": \"Relationship\",\n                \"object\": \"urn:ngsi-ld:Netconf:r1\",\n                \"datasetId\": \"urn:ngsi-ld:Netconf:r1\"\n            }\n        ],\n        \"password\": {\n            \"type\": \"Property\",\n            \"value\": \"admin\"\n        },\n        \"username\": {\n            \"type\": \"Property\",\n            \"value\": \"admin\"\n        }\n    }\n]"
						},
						"url": {
							"raw": "http://{{broker}}/ngsi-ld/v1/entityOperations/create",
							"protocol": "http",
							"host": [
								"{{broker}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entityOperations",
								"create"
							]
						},
						"description": "New context data entities can be created by making a POST request to the `/ngsi-ld/v1/entities` endpoint and supply an `@context` along with structured **NGSI-LD** data.\n\nThe first request will take some time, as the context broker must navigate and load all of the files mentioned in the\n`@context`.\n\nSince the `Content-Type: application/ld+json` the `@context` is supplied in the body of the request. As with all **NGSI-LD** interactions, the core **NGSI-LD** `@context` ([`https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld`](https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld) is implicitly included as well.)\n\nThis means that the actual `@context` is:\n\n```jsonld\n{\n    \"@context\": [\n        \"http://context-provider:3000/data-models/ngsi-context.jsonld\",\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld\"\n    ]\n}\n```\n\nwith the core `@context` being processed **last** and therefore overriding any terms previously defined with the same `@id`."
					},
					"response": []
				},
				{
					"name": "Obtain Entity Data by type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{broker}}/ngsi-ld/v1/entities/?type=Netconf",
							"protocol": "http",
							"host": [
								"{{broker}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "Netconf"
								}
							]
						},
						"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
					},
					"response": []
				}
			]
		},
		{
			"name": "DataLake",
			"item": [
				{
					"name": "Create DataLake",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Link",
								"type": "text",
								"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"urn:ngsi-ld:DataLake:production\",\n    \"type\": \"DataLake\",\n    \"apiKey\": {\n        \"type\": \"Property\",\n        \"value\": \"SPECIFY_A_REAL_KEY\"\n    },\n    \"region\": {\n        \"type\": \"Property\",\n        \"value\": \"eu-west-2\"\n    },\n    \"uri\": {\n        \"type\": \"Property\",\n        \"value\": \"https://2yd7m1wqii.execute-api.eu-west-2.amazonaws.com/v1\"\n    }\n}\n"
						},
						"url": {
							"raw": "http://{{broker}}/ngsi-ld/v1/entities/",
							"protocol": "http",
							"host": [
								"{{broker}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							]
						},
						"description": "New context data entities can be created by making a POST request to the `/ngsi-ld/v1/entities` endpoint and supply an `@context` along with structured **NGSI-LD** data.\n\nThe first request will take some time, as the context broker must navigate and load all of the files mentioned in the\n`@context`.\n\nSince the `Content-Type: application/ld+json` the `@context` is supplied in the body of the request. As with all **NGSI-LD** interactions, the core **NGSI-LD** `@context` ([`https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld`](https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld) is implicitly included as well.)\n\nThis means that the actual `@context` is:\n\n```jsonld\n{\n    \"@context\": [\n        \"http://context-provider:3000/data-models/ngsi-context.jsonld\",\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld\"\n    ]\n}\n```\n\nwith the core `@context` being processed **last** and therefore overriding any terms previously defined with the same `@id`."
					},
					"response": []
				},
				{
					"name": "Obtain Entity Data by type Copy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{broker}}/ngsi-ld/v1/entities/?type=Bucket",
							"protocol": "http",
							"host": [
								"{{broker}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "Bucket"
								}
							]
						},
						"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
					},
					"response": []
				},
				{
					"name": "Delete Entity Data by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{broker}}/ngsi-ld/v1/entities/urn:ngsi-ld:DataLake:production",
							"protocol": "http",
							"host": [
								"{{broker}}"
							],
							"path": [
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:DataLake:production"
							]
						},
						"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
					},
					"response": []
				}
			]
		},
		{
			"name": "Pipeline",
			"item": [
				{
					"name": "GnmiCollector",
					"item": [
						{
							"name": "Create GnmiCollector sample",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Link",
										"type": "text",
										"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"urn:ngsi-ld:GnmiCollector:1\",\n    \"type\": \"GnmiCollector\",\n    \"action\": {\n        \"type\": \"Property\",\n        \"value\": \"START\"\n    },\n    \"encoding\": {\n        \"type\": \"Property\",\n        \"value\": \"JSON_IETF\"\n    },\n    \"hasInput\": {\n        \"type\": \"Relationship\",\n        \"object\": \"urn:ngsi-ld:Device:r1\"\n    },\n    \"mode\": {\n        \"type\": \"Property\",\n        \"value\": \"STREAM\"\n    },\n    \"paths\": {\n        \"type\": \"Property\",\n        \"value\": \n            \"/interfaces/interface[name=Ethernet1]/state/counters/out-octets\"\n        \n    },\n    \"sampleInterval\": {\n        \"type\": \"Property\",\n        \"value\": 10000\n    },\n    \"streamMode\": {\n        \"type\": \"Property\",\n        \"value\": \"SAMPLE\"\n    }\n}\n"
								},
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										""
									]
								},
								"description": "New context data entities can be created by making a POST request to the `/ngsi-ld/v1/entities` endpoint and supply an `@context` along with structured **NGSI-LD** data.\n\nThe first request will take some time, as the context broker must navigate and load all of the files mentioned in the\n`@context`.\n\nSince the `Content-Type: application/ld+json` the `@context` is supplied in the body of the request. As with all **NGSI-LD** interactions, the core **NGSI-LD** `@context` ([`https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld`](https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld) is implicitly included as well.)\n\nThis means that the actual `@context` is:\n\n```jsonld\n{\n    \"@context\": [\n        \"http://context-provider:3000/data-models/ngsi-context.jsonld\",\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld\"\n    ]\n}\n```\n\nwith the core `@context` being processed **last** and therefore overriding any terms previously defined with the same `@id`."
							},
							"response": []
						},
						{
							"name": "Create GnmiCollector on-change",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Link",
										"type": "text",
										"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"urn:ngsi-ld:GnmiCollector:2\",\n    \"type\": \"GnmiCollector\",\n    \"action\": {\n        \"type\": \"Property\",\n        \"value\": \"START\"\n    },\n    \"encoding\": {\n        \"type\": \"Property\",\n        \"value\": \"JSON\"\n    },\n    \"hasInput\": {\n        \"type\": \"Relationship\",\n        \"object\": \"urn:ngsi-ld:Device:r1\"\n    },\n    \"mode\": {\n        \"type\": \"Property\",\n        \"value\": \"STREAM\"\n    },\n    \"paths\": {\n        \"type\": \"Property\",\n        \"value\": [\n            \"/interfaces/interface[name=Ethernet1]/state/oper-status\"\n        ]\n    },\n    \"streamMode\": {\n        \"type\": \"Property\",\n        \"value\": \"ON_CHANGE\"\n    }\n}\n"
								},
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										""
									]
								},
								"description": "New context data entities can be created by making a POST request to the `/ngsi-ld/v1/entities` endpoint and supply an `@context` along with structured **NGSI-LD** data.\n\nThe first request will take some time, as the context broker must navigate and load all of the files mentioned in the\n`@context`.\n\nSince the `Content-Type: application/ld+json` the `@context` is supplied in the body of the request. As with all **NGSI-LD** interactions, the core **NGSI-LD** `@context` ([`https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld`](https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld) is implicitly included as well.)\n\nThis means that the actual `@context` is:\n\n```jsonld\n{\n    \"@context\": [\n        \"http://context-provider:3000/data-models/ngsi-context.jsonld\",\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld\"\n    ]\n}\n```\n\nwith the core `@context` being processed **last** and therefore overriding any terms previously defined with the same `@id`."
							},
							"response": []
						},
						{
							"name": "END GnmiCollector",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Link",
										"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"Property\", \r\n    \"value\": \"END\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/urn:ngsi-ld:GnmiCollector:1/attrs/action",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										"urn:ngsi-ld:GnmiCollector:1",
										"attrs",
										"action"
									]
								},
								"description": "partially update the attribute of entity"
							},
							"response": []
						},
						{
							"name": "Delete GnmiCollector",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/urn:ngsi-ld:GnmiCollector:1",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										"urn:ngsi-ld:GnmiCollector:1"
									]
								},
								"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
							},
							"response": []
						},
						{
							"name": "Get GnmiCollector by type",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Link",
										"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/?type=GnmiCollector",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										""
									],
									"query": [
										{
											"key": "type",
											"value": "GnmiCollector"
										}
									]
								},
								"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
							},
							"response": []
						},
						{
							"name": "Create GnmiCollector upsert",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Link",
										"type": "text",
										"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[{\n    \"id\": \"urn:ngsi-ld:GnmiCollector:1\",\n    \"type\": \"GnmiCollector\",\n    \"createdAt\": \"2022-05-31T15:03:00+00:00\",\n    \"modifiedAt\": \"2022-05-31T15:03:00+00:00\",\n    \"action\": {\n        \"type\": \"Property\",\n        \"value\": \"START\"\n    },\n    \"state\": {\n        \"type\": \"Property\",\n        \"value\": \"BUILDING\"\n    },\n    \"encoding\": {\n        \"type\": \"Property\",\n        \"value\": \"JSON\"\n    },\n    \"hasInput\": {\n        \"type\": \"Relationship\",\n        \"object\": \"urn:ngsi-ld:Device:r1\"\n    },\n    \"mode\": {\n        \"type\": \"Property\",\n        \"value\": \"STREAM\"\n    },\n    \"paths\": {\n        \"type\": \"Property\",\n        \"value\": [\n            \"/interfaces/interface[name=Ethernet1]/state/counters/in-pkts\",\n            \"/interfaces/interface[name=Ethernet1]/state/counters/out-pkts\"\n        ]\n    },\n    \"sampleInterval\": {\n        \"type\": \"Property\",\n        \"value\": 10000,\n        \"unitCode\": \"C26\"\n    },\n    \"streamMode\": {\n        \"type\": \"Property\",\n        \"value\": \"SAMPLE\"\n    }\n}]"
								},
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entityOperations/upsert?options=update",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entityOperations",
										"upsert"
									],
									"query": [
										{
											"key": "options",
											"value": "update"
										}
									]
								},
								"description": "New context data entities can be created by making a POST request to the `/ngsi-ld/v1/entities` endpoint and supply an `@context` along with structured **NGSI-LD** data.\n\nThe first request will take some time, as the context broker must navigate and load all of the files mentioned in the\n`@context`.\n\nSince the `Content-Type: application/ld+json` the `@context` is supplied in the body of the request. As with all **NGSI-LD** interactions, the core **NGSI-LD** `@context` ([`https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld`](https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld) is implicitly included as well.)\n\nThis means that the actual `@context` is:\n\n```jsonld\n{\n    \"@context\": [\n        \"http://context-provider:3000/data-models/ngsi-context.jsonld\",\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld\"\n    ]\n}\n```\n\nwith the core `@context` being processed **last** and therefore overriding any terms previously defined with the same `@id`."
							},
							"response": []
						}
					]
				},
				{
					"name": "InterfaceKPIAggregator",
					"item": [
						{
							"name": "Create InterfaceKPIAggregator throughput",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Link",
										"type": "text",
										"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"urn:ngsi-ld:InterfaceKPIAggregator:1\",\n    \"type\": \"InterfaceKPIAggregator\",\n    \"action\": {\n        \"type\": \"Property\",\n        \"value\": \"START\"\n    },\n    \"hasInput\": {\n        \"type\": \"Relationship\",\n        \"object\": \"urn:ngsi-ld:GnmiCollector:1\"\n    },\n    \"kpi\": {\n        \"type\": \"Property\",\n        \"value\": \"throughput\"\n    },\n    \"windowSize\": {\n        \"type\": \"Property\",\n        \"value\": 60000\n    }\n}\n"
								},
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										""
									]
								},
								"description": "New context data entities can be created by making a POST request to the `/ngsi-ld/v1/entities` endpoint and supply an `@context` along with structured **NGSI-LD** data.\n\nThe first request will take some time, as the context broker must navigate and load all of the files mentioned in the\n`@context`.\n\nSince the `Content-Type: application/ld+json` the `@context` is supplied in the body of the request. As with all **NGSI-LD** interactions, the core **NGSI-LD** `@context` ([`https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld`](https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld) is implicitly included as well.)\n\nThis means that the actual `@context` is:\n\n```jsonld\n{\n    \"@context\": [\n        \"http://context-provider:3000/data-models/ngsi-context.jsonld\",\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld\"\n    ]\n}\n```\n\nwith the core `@context` being processed **last** and therefore overriding any terms previously defined with the same `@id`."
							},
							"response": []
						},
						{
							"name": "Create InterfaceKPIAggregator packet-loss",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Link",
										"type": "text",
										"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"urn:ngsi-ld:InterfaceKPIAggregator:2\",\n    \"type\": \"InterfaceKPIAggregator\",\n    \"action\": {\n        \"type\": \"Property\",\n        \"value\": \"START\"\n    },\n    \"hasInput\": {\n        \"type\": \"Relationship\",\n        \"object\": \"urn:ngsi-ld:GnmiCollector:1\"\n    },\n    \"kpi\": {\n        \"type\": \"Property\",\n        \"value\": \"packet-loss\"\n    },\n    \"windowSize\": {\n        \"type\": \"Property\",\n        \"value\": 60000\n    }\n}\n"
								},
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										""
									]
								},
								"description": "New context data entities can be created by making a POST request to the `/ngsi-ld/v1/entities` endpoint and supply an `@context` along with structured **NGSI-LD** data.\n\nThe first request will take some time, as the context broker must navigate and load all of the files mentioned in the\n`@context`.\n\nSince the `Content-Type: application/ld+json` the `@context` is supplied in the body of the request. As with all **NGSI-LD** interactions, the core **NGSI-LD** `@context` ([`https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld`](https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld) is implicitly included as well.)\n\nThis means that the actual `@context` is:\n\n```jsonld\n{\n    \"@context\": [\n        \"http://context-provider:3000/data-models/ngsi-context.jsonld\",\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld\"\n    ]\n}\n```\n\nwith the core `@context` being processed **last** and therefore overriding any terms previously defined with the same `@id`."
							},
							"response": []
						},
						{
							"name": "END InterfaceKPIAggregator",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Link",
										"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"Property\", \r\n    \"value\": \"END\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/urn:ngsi-ld:InterfaceKPIAggregator:1/attrs/action",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										"urn:ngsi-ld:InterfaceKPIAggregator:1",
										"attrs",
										"action"
									]
								},
								"description": "partially update the attribute of entity"
							},
							"response": []
						},
						{
							"name": "Delete InterfaceKPIAggregaator",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/urn:ngsi-ld:InterfaceKPIAggregator:1",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										"urn:ngsi-ld:InterfaceKPIAggregator:1"
									]
								},
								"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
							},
							"response": []
						},
						{
							"name": "Get InterfaceKPIAggregator by type",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Link",
										"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/?type=InterfaceKPIAggregator",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										""
									],
									"query": [
										{
											"key": "type",
											"value": "InterfaceKPIAggregator"
										}
									]
								},
								"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
							},
							"response": []
						}
					]
				},
				{
					"name": "DataLakeDispatcher",
					"item": [
						{
							"name": "Create DataLakeDispatcher",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Link",
										"type": "text",
										"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"urn:ngsi-ld:DataLakeDispatcher:1\",\n    \"type\": \"DataLakeDispatcher\",\n    \"action\": {\n        \"type\": \"Property\",\n        \"value\": \"START\"\n    },\n    \"bucket\": {\n        \"type\": \"Property\",\n        \"value\": \"transport-telemetry\"\n    },\n    \"hasInput\": {\n        \"type\": \"Relationship\",\n        \"object\": \"urn:ngsi-ld:InterfaceKPIAggregator:1\"\n    },\n    \"hasOutput\": {\n        \"type\": \"Relationship\",\n        \"object\": \"urn:ngsi-ld:DataLake:production\"\n    },\n    \"instanceFileName\": {\n        \"type\": \"Property\",\n        \"value\": \"eMBB_Throughput_KPI\"\n    }\n}\n"
								},
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										""
									]
								},
								"description": "New context data entities can be created by making a POST request to the `/ngsi-ld/v1/entities` endpoint and supply an `@context` along with structured **NGSI-LD** data.\n\nThe first request will take some time, as the context broker must navigate and load all of the files mentioned in the\n`@context`.\n\nSince the `Content-Type: application/ld+json` the `@context` is supplied in the body of the request. As with all **NGSI-LD** interactions, the core **NGSI-LD** `@context` ([`https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld`](https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld) is implicitly included as well.)\n\nThis means that the actual `@context` is:\n\n```jsonld\n{\n    \"@context\": [\n        \"http://context-provider:3000/data-models/ngsi-context.jsonld\",\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld\"\n    ]\n}\n```\n\nwith the core `@context` being processed **last** and therefore overriding any terms previously defined with the same `@id`."
							},
							"response": []
						},
						{
							"name": "END DataLakeDispatcher",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Link",
										"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"Property\", \r\n    \"value\": \"END\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/urn:ngsi-ld:DataLakeDispatcher:1/attrs/action",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										"urn:ngsi-ld:DataLakeDispatcher:1",
										"attrs",
										"action"
									]
								},
								"description": "partially update the attribute of entity"
							},
							"response": []
						},
						{
							"name": "Delete DataLakeDispatcher",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/urn:ngsi-ld:DataLakeDispatcher:1",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										"urn:ngsi-ld:DataLakeDispatcher:1"
									]
								},
								"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
							},
							"response": []
						},
						{
							"name": "Get DataLakeDispatcher by type",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Link",
										"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://{{broker}}/ngsi-ld/v1/entities/?type=DataLakeDispatcher",
									"protocol": "http",
									"host": [
										"{{broker}}"
									],
									"path": [
										"ngsi-ld",
										"v1",
										"entities",
										""
									],
									"query": [
										{
											"key": "type",
											"value": "DataLakeDispatcher"
										}
									]
								},
								"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Query all subscriptions",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Link",
						"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{broker}}/ngsi-ld/v1/subscriptions/",
					"protocol": "http",
					"host": [
						"{{broker}}"
					],
					"path": [
						"ngsi-ld",
						"v1",
						"subscriptions",
						""
					]
				},
				"description": "for retreiving specific subscription"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "context.jsonld",
			"value": "http://context-catalog:8080/context.jsonld",
			"type": "default"
		},
		{
			"key": "broker",
			"value": "localhost:9090",
			"type": "default"
		}
	]
}