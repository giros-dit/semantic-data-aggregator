/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package giros.org;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Counters extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5457103718248230475L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Counters\",\"namespace\":\"giros.org\",\"fields\":[{\"name\":\"in_octets\",\"type\":[\"null\",\"long\"],\"doc\":\"/interfaces/interface/state/counters/in-octets\"},{\"name\":\"in_pkts\",\"type\":[\"null\",\"long\"],\"doc\":\"/interfaces/interface/state/counters/in-pkts\"},{\"name\":\"in_unicast_pkts\",\"type\":[\"null\",\"long\"],\"doc\":\"/interfaces/interface/state/counters/in-unicast-pkts\"},{\"name\":\"in_multicast_pkts\",\"type\":[\"null\",\"long\"],\"doc\":\"/interfaces/interface/state/counters/in-multicast-pkts\"},{\"name\":\"out_octets\",\"type\":[\"null\",\"long\"],\"doc\":\"/interfaces/interface/state/counters/out-octets\"}],\"aliases\":[\"countersType\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Counters> ENCODER =
      new BinaryMessageEncoder<Counters>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Counters> DECODER =
      new BinaryMessageDecoder<Counters>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Counters> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Counters> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Counters> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Counters>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Counters to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Counters from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Counters instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Counters fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** /interfaces/interface/state/counters/in-octets */
   private java.lang.Long in_octets;
  /** /interfaces/interface/state/counters/in-pkts */
   private java.lang.Long in_pkts;
  /** /interfaces/interface/state/counters/in-unicast-pkts */
   private java.lang.Long in_unicast_pkts;
  /** /interfaces/interface/state/counters/in-multicast-pkts */
   private java.lang.Long in_multicast_pkts;
  /** /interfaces/interface/state/counters/out-octets */
   private java.lang.Long out_octets;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Counters() {}

  /**
   * All-args constructor.
   * @param in_octets /interfaces/interface/state/counters/in-octets
   * @param in_pkts /interfaces/interface/state/counters/in-pkts
   * @param in_unicast_pkts /interfaces/interface/state/counters/in-unicast-pkts
   * @param in_multicast_pkts /interfaces/interface/state/counters/in-multicast-pkts
   * @param out_octets /interfaces/interface/state/counters/out-octets
   */
  public Counters(java.lang.Long in_octets, java.lang.Long in_pkts, java.lang.Long in_unicast_pkts, java.lang.Long in_multicast_pkts, java.lang.Long out_octets) {
    this.in_octets = in_octets;
    this.in_pkts = in_pkts;
    this.in_unicast_pkts = in_unicast_pkts;
    this.in_multicast_pkts = in_multicast_pkts;
    this.out_octets = out_octets;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return in_octets;
    case 1: return in_pkts;
    case 2: return in_unicast_pkts;
    case 3: return in_multicast_pkts;
    case 4: return out_octets;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: in_octets = (java.lang.Long)value$; break;
    case 1: in_pkts = (java.lang.Long)value$; break;
    case 2: in_unicast_pkts = (java.lang.Long)value$; break;
    case 3: in_multicast_pkts = (java.lang.Long)value$; break;
    case 4: out_octets = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'in_octets' field.
   * @return /interfaces/interface/state/counters/in-octets
   */
  public java.lang.Long getInOctets() {
    return in_octets;
  }


  /**
   * Sets the value of the 'in_octets' field.
   * /interfaces/interface/state/counters/in-octets
   * @param value the value to set.
   */
  public void setInOctets(java.lang.Long value) {
    this.in_octets = value;
  }

  /**
   * Gets the value of the 'in_pkts' field.
   * @return /interfaces/interface/state/counters/in-pkts
   */
  public java.lang.Long getInPkts() {
    return in_pkts;
  }


  /**
   * Sets the value of the 'in_pkts' field.
   * /interfaces/interface/state/counters/in-pkts
   * @param value the value to set.
   */
  public void setInPkts(java.lang.Long value) {
    this.in_pkts = value;
  }

  /**
   * Gets the value of the 'in_unicast_pkts' field.
   * @return /interfaces/interface/state/counters/in-unicast-pkts
   */
  public java.lang.Long getInUnicastPkts() {
    return in_unicast_pkts;
  }


  /**
   * Sets the value of the 'in_unicast_pkts' field.
   * /interfaces/interface/state/counters/in-unicast-pkts
   * @param value the value to set.
   */
  public void setInUnicastPkts(java.lang.Long value) {
    this.in_unicast_pkts = value;
  }

  /**
   * Gets the value of the 'in_multicast_pkts' field.
   * @return /interfaces/interface/state/counters/in-multicast-pkts
   */
  public java.lang.Long getInMulticastPkts() {
    return in_multicast_pkts;
  }


  /**
   * Sets the value of the 'in_multicast_pkts' field.
   * /interfaces/interface/state/counters/in-multicast-pkts
   * @param value the value to set.
   */
  public void setInMulticastPkts(java.lang.Long value) {
    this.in_multicast_pkts = value;
  }

  /**
   * Gets the value of the 'out_octets' field.
   * @return /interfaces/interface/state/counters/out-octets
   */
  public java.lang.Long getOutOctets() {
    return out_octets;
  }


  /**
   * Sets the value of the 'out_octets' field.
   * /interfaces/interface/state/counters/out-octets
   * @param value the value to set.
   */
  public void setOutOctets(java.lang.Long value) {
    this.out_octets = value;
  }

  /**
   * Creates a new Counters RecordBuilder.
   * @return A new Counters RecordBuilder
   */
  public static giros.org.Counters.Builder newBuilder() {
    return new giros.org.Counters.Builder();
  }

  /**
   * Creates a new Counters RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Counters RecordBuilder
   */
  public static giros.org.Counters.Builder newBuilder(giros.org.Counters.Builder other) {
    if (other == null) {
      return new giros.org.Counters.Builder();
    } else {
      return new giros.org.Counters.Builder(other);
    }
  }

  /**
   * Creates a new Counters RecordBuilder by copying an existing Counters instance.
   * @param other The existing instance to copy.
   * @return A new Counters RecordBuilder
   */
  public static giros.org.Counters.Builder newBuilder(giros.org.Counters other) {
    if (other == null) {
      return new giros.org.Counters.Builder();
    } else {
      return new giros.org.Counters.Builder(other);
    }
  }

  /**
   * RecordBuilder for Counters instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Counters>
    implements org.apache.avro.data.RecordBuilder<Counters> {

    /** /interfaces/interface/state/counters/in-octets */
    private java.lang.Long in_octets;
    /** /interfaces/interface/state/counters/in-pkts */
    private java.lang.Long in_pkts;
    /** /interfaces/interface/state/counters/in-unicast-pkts */
    private java.lang.Long in_unicast_pkts;
    /** /interfaces/interface/state/counters/in-multicast-pkts */
    private java.lang.Long in_multicast_pkts;
    /** /interfaces/interface/state/counters/out-octets */
    private java.lang.Long out_octets;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(giros.org.Counters.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.in_octets)) {
        this.in_octets = data().deepCopy(fields()[0].schema(), other.in_octets);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.in_pkts)) {
        this.in_pkts = data().deepCopy(fields()[1].schema(), other.in_pkts);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.in_unicast_pkts)) {
        this.in_unicast_pkts = data().deepCopy(fields()[2].schema(), other.in_unicast_pkts);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.in_multicast_pkts)) {
        this.in_multicast_pkts = data().deepCopy(fields()[3].schema(), other.in_multicast_pkts);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.out_octets)) {
        this.out_octets = data().deepCopy(fields()[4].schema(), other.out_octets);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing Counters instance
     * @param other The existing instance to copy.
     */
    private Builder(giros.org.Counters other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.in_octets)) {
        this.in_octets = data().deepCopy(fields()[0].schema(), other.in_octets);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.in_pkts)) {
        this.in_pkts = data().deepCopy(fields()[1].schema(), other.in_pkts);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.in_unicast_pkts)) {
        this.in_unicast_pkts = data().deepCopy(fields()[2].schema(), other.in_unicast_pkts);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.in_multicast_pkts)) {
        this.in_multicast_pkts = data().deepCopy(fields()[3].schema(), other.in_multicast_pkts);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.out_octets)) {
        this.out_octets = data().deepCopy(fields()[4].schema(), other.out_octets);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'in_octets' field.
      * /interfaces/interface/state/counters/in-octets
      * @return The value.
      */
    public java.lang.Long getInOctets() {
      return in_octets;
    }


    /**
      * Sets the value of the 'in_octets' field.
      * /interfaces/interface/state/counters/in-octets
      * @param value The value of 'in_octets'.
      * @return This builder.
      */
    public giros.org.Counters.Builder setInOctets(java.lang.Long value) {
      validate(fields()[0], value);
      this.in_octets = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'in_octets' field has been set.
      * /interfaces/interface/state/counters/in-octets
      * @return True if the 'in_octets' field has been set, false otherwise.
      */
    public boolean hasInOctets() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'in_octets' field.
      * /interfaces/interface/state/counters/in-octets
      * @return This builder.
      */
    public giros.org.Counters.Builder clearInOctets() {
      in_octets = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'in_pkts' field.
      * /interfaces/interface/state/counters/in-pkts
      * @return The value.
      */
    public java.lang.Long getInPkts() {
      return in_pkts;
    }


    /**
      * Sets the value of the 'in_pkts' field.
      * /interfaces/interface/state/counters/in-pkts
      * @param value The value of 'in_pkts'.
      * @return This builder.
      */
    public giros.org.Counters.Builder setInPkts(java.lang.Long value) {
      validate(fields()[1], value);
      this.in_pkts = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'in_pkts' field has been set.
      * /interfaces/interface/state/counters/in-pkts
      * @return True if the 'in_pkts' field has been set, false otherwise.
      */
    public boolean hasInPkts() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'in_pkts' field.
      * /interfaces/interface/state/counters/in-pkts
      * @return This builder.
      */
    public giros.org.Counters.Builder clearInPkts() {
      in_pkts = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'in_unicast_pkts' field.
      * /interfaces/interface/state/counters/in-unicast-pkts
      * @return The value.
      */
    public java.lang.Long getInUnicastPkts() {
      return in_unicast_pkts;
    }


    /**
      * Sets the value of the 'in_unicast_pkts' field.
      * /interfaces/interface/state/counters/in-unicast-pkts
      * @param value The value of 'in_unicast_pkts'.
      * @return This builder.
      */
    public giros.org.Counters.Builder setInUnicastPkts(java.lang.Long value) {
      validate(fields()[2], value);
      this.in_unicast_pkts = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'in_unicast_pkts' field has been set.
      * /interfaces/interface/state/counters/in-unicast-pkts
      * @return True if the 'in_unicast_pkts' field has been set, false otherwise.
      */
    public boolean hasInUnicastPkts() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'in_unicast_pkts' field.
      * /interfaces/interface/state/counters/in-unicast-pkts
      * @return This builder.
      */
    public giros.org.Counters.Builder clearInUnicastPkts() {
      in_unicast_pkts = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'in_multicast_pkts' field.
      * /interfaces/interface/state/counters/in-multicast-pkts
      * @return The value.
      */
    public java.lang.Long getInMulticastPkts() {
      return in_multicast_pkts;
    }


    /**
      * Sets the value of the 'in_multicast_pkts' field.
      * /interfaces/interface/state/counters/in-multicast-pkts
      * @param value The value of 'in_multicast_pkts'.
      * @return This builder.
      */
    public giros.org.Counters.Builder setInMulticastPkts(java.lang.Long value) {
      validate(fields()[3], value);
      this.in_multicast_pkts = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'in_multicast_pkts' field has been set.
      * /interfaces/interface/state/counters/in-multicast-pkts
      * @return True if the 'in_multicast_pkts' field has been set, false otherwise.
      */
    public boolean hasInMulticastPkts() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'in_multicast_pkts' field.
      * /interfaces/interface/state/counters/in-multicast-pkts
      * @return This builder.
      */
    public giros.org.Counters.Builder clearInMulticastPkts() {
      in_multicast_pkts = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'out_octets' field.
      * /interfaces/interface/state/counters/out-octets
      * @return The value.
      */
    public java.lang.Long getOutOctets() {
      return out_octets;
    }


    /**
      * Sets the value of the 'out_octets' field.
      * /interfaces/interface/state/counters/out-octets
      * @param value The value of 'out_octets'.
      * @return This builder.
      */
    public giros.org.Counters.Builder setOutOctets(java.lang.Long value) {
      validate(fields()[4], value);
      this.out_octets = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'out_octets' field has been set.
      * /interfaces/interface/state/counters/out-octets
      * @return True if the 'out_octets' field has been set, false otherwise.
      */
    public boolean hasOutOctets() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'out_octets' field.
      * /interfaces/interface/state/counters/out-octets
      * @return This builder.
      */
    public giros.org.Counters.Builder clearOutOctets() {
      out_octets = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Counters build() {
      try {
        Counters record = new Counters();
        record.in_octets = fieldSetFlags()[0] ? this.in_octets : (java.lang.Long) defaultValue(fields()[0]);
        record.in_pkts = fieldSetFlags()[1] ? this.in_pkts : (java.lang.Long) defaultValue(fields()[1]);
        record.in_unicast_pkts = fieldSetFlags()[2] ? this.in_unicast_pkts : (java.lang.Long) defaultValue(fields()[2]);
        record.in_multicast_pkts = fieldSetFlags()[3] ? this.in_multicast_pkts : (java.lang.Long) defaultValue(fields()[3]);
        record.out_octets = fieldSetFlags()[4] ? this.out_octets : (java.lang.Long) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Counters>
    WRITER$ = (org.apache.avro.io.DatumWriter<Counters>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Counters>
    READER$ = (org.apache.avro.io.DatumReader<Counters>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.in_octets == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.in_octets);
    }

    if (this.in_pkts == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.in_pkts);
    }

    if (this.in_unicast_pkts == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.in_unicast_pkts);
    }

    if (this.in_multicast_pkts == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.in_multicast_pkts);
    }

    if (this.out_octets == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.out_octets);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.in_octets = null;
      } else {
        this.in_octets = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.in_pkts = null;
      } else {
        this.in_pkts = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.in_unicast_pkts = null;
      } else {
        this.in_unicast_pkts = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.in_multicast_pkts = null;
      } else {
        this.in_multicast_pkts = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.out_octets = null;
      } else {
        this.out_octets = in.readLong();
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.in_octets = null;
          } else {
            this.in_octets = in.readLong();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.in_pkts = null;
          } else {
            this.in_pkts = in.readLong();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.in_unicast_pkts = null;
          } else {
            this.in_unicast_pkts = in.readLong();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.in_multicast_pkts = null;
          } else {
            this.in_multicast_pkts = in.readLong();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.out_octets = null;
          } else {
            this.out_octets = in.readLong();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










