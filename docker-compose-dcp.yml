version: '3'
services:
  app-manager:
    build:
      context: .
      dockerfile: ./docker/app-manager/Dockerfile
    hostname: app-manager
    container_name: app-manager
    environment:
      - APP_MANAGER_URI=${APP_MANAGER_URI}
      - BROKER_URI=${BROKER_URI}
      - CONTEXT_CATALOG_URI=${CONTEXT_CATALOG_URI}
      - FLINK_MANAGER_URI=${FLINK_MANAGER_URI}
      - NIFI_URI=${NIFI_URI}
      - NIFI_USERNAME=${NIFI_USERNAME}
      - NIFI_PASSWORD=${NIFI_PASSWORD}
    ports:
      - "8082:8080"
    volumes:
      - ./docker/app-manager/app_manager:/opt/sda/app-manager/app_manager
    depends_on:
      - nifi
      - scorpio
  context-catalog:
    image: halverneus/static-file-server
    hostname: context-catalog
    container_name: context-catalog
    ports:
      - "8080"
    volumes:
      - ./docker/context-catalog:/web
  eureka:
    image: scorpiobroker/scorpio:eureka-server_2.1.1
    hostname: eureka
    container_name: eureka
    ports:
      - "8761"
  flink-jobmanager:
    image: flink:1.14.4-scala_2.12-java11
    hostname: flink-jobmanager
    container_name: flink-jobmanager
    ports:
      - "8084:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
    volumes:
      - ./flink-conf:/flink-conf
  flink-taskmanager1:
    image: flink:1.14.4-scala_2.12-java11
    hostname: flink-taskmanager1
    container_name: flink-taskmanager1
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 1
  flink-taskmanager2:
    image: flink:1.14.0-scala_2.12-java11
    hostname: flink-taskmanager2
    container_name: flink-taskmanager2
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 1
  gateway:
    image: scorpiobroker/scorpio:gateway_aaio_2.1.13
    hostname: gateway
    container_name: gateway
    ports:
      - "9090:9090"
    depends_on:
      - eureka
  goflow2:
    build:
       context: ./docker/goflow2-collector
       dockerfile: Dockerfile
    hostname: goflow2
    container_name: goflow2
    ports:
      - 9995:9995/udp
    depends_on:
      - kafka
    restart: always
    command:
    - -transport=kafka
    - -transport.kafka.brokers=kafka:9092
    - -transport.kafka.topic=${KAFKA_OUTPUT_TOPIC_GOFLOW2}
    - -format=json
    - -listen=netflow://:9995
  kafka:
    image: bitnami/kafka
    hostname: kafka
    container_name: kafka
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_RETENTION_MS: 10000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    logging:
      driver: none
  nifi:
    build:
      context: .
      dockerfile: ./docker/nifi/Dockerfile
    hostname: nifi
    container_name: nifi
    user: root
    environment:
      SINGLE_USER_CREDENTIALS_USERNAME: ${NIFI_USERNAME}
      # Must be of 12 characters min
      SINGLE_USER_CREDENTIALS_PASSWORD: ${NIFI_PASSWORD}
      NIFI_JVM_HEAP_INIT: 4g
      NIFI_JVM_HEAP_MAX: 6g
    ports:
      - "8443:8443"
      # Used by Prometheus exporter
      - "8444:8444"
    volumes:
      - ./gnmi/gnmic-cfgs:/gnmic-cfgs
      - ./docker/nifi/drivers/jinja-templates:/jinja-templates
      - ./docker/nifi/drivers/nars:/opt/nifi/nifi-current/extensions
      - ./docker/nifi/drivers/yang-models:/opt/nifi/yang-models
  postgres:
    image: postgis/postgis
    hostname: postgres
    container_name: postgres
    ports:
      - "5432"
    environment:
      POSTGRES_USER: ngb
      POSTGRES_PASSWORD: ngb
      POSTGRES_DB: ngb
    logging:
      driver: none
  scorpio:
    image: scorpiobroker/scorpio:scorpio-aaio_2.1.13
    hostname: scorpio
    container_name: scorpio
    ports:
      - "27015"
    depends_on:
      - gateway
      - eureka
      - postgres
      - kafka
  weaver:
    build:
      context: .
      dockerfile: ./docker/weaver/Dockerfile
    hostname: weaver
    container_name: weaver
    environment:
      - BROKER_URI=${BROKER_URI}
      - CONTEXT_CATALOG_URI=${CONTEXT_CATALOG_URI}
      - FLINK_MANAGER_URI=${FLINK_MANAGER_URI}
      - NIFI_URI=${NIFI_URI}
      - NIFI_USERNAME=${NIFI_USERNAME}
      - NIFI_PASSWORD=${NIFI_PASSWORD}
      - WEAVER_URI=${WEAVER_URI}
    ports:
      - "8080"
    volumes:
      - ./docker/weaver/weaver:/opt/sda/weaver/weaver
    depends_on:
      - nifi
      - scorpio
  zookeeper:
    image: zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181"
    logging:
      driver: none


