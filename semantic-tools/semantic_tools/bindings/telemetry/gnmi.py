# generated by datamodel-codegen:
#   filename:  telemetry/gnmi.json

from __future__ import annotations

from enum import Enum
from ipaddress import IPv4Address
from typing import List, Literal, Optional, Union

from pydantic import Extra, Field, StrictInt, StrictStr

from ..entity import Entity, Property, Relationship


class GnmiEncodings(Enum):
    """
    Encoding formats allowed by the gNMI protocol.
    """

    json = 'JSON'
    bytes = 'BYTES'
    proto = 'PROTO'
    ascii = 'ASCII'
    json_ietf = 'JSON_IETF'


class Address(Property):
    """
    Property. Address of this gNMI service.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: IPv4Address


class Encodings(Property):
    """
    Property. List of encodings formats supported by this gNMI service.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: Union[List[GnmiEncodings], GnmiEncodings]


class Port(Property):
    """
    Property. Port of the gNMI service.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: StrictInt


class SupportedBy(Relationship):
    """
    Relationship. Network device that supports this gNMI service.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    object: StrictStr


class Version(Property):
    """
    Property. Version of this gNMI service.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: StrictStr


class Gnmi(Entity):
    """
    Entity that represents a gNMI service which is supported by a specific network device
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    type: Optional[Literal['Gnmi']] = Field(
        'Gnmi', description='NGSI-LD Entity identifier. It has to be Gnmi'
    )
    address: Address
    encodings: Optional[Encodings]
    port: Port
    supported_by: SupportedBy = Field(..., alias='supportedBy')
    version: Optional[Version]
