# generated by datamodel-codegen:
#   filename:  telemetry/netconf.json

from __future__ import annotations

from ipaddress import IPv4Address
from typing import List, Literal, Optional, Union

from pydantic import Extra, Field, StrictInt, StrictStr

from ..entity import Entity, Property, Relationship


class Address(Property):
    """
    Property. Address of this Netconf service.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: IPv4Address


class Capabilities(Property):
    """
    Property. List of capabilities supported by this Netconf service.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: Union[List[StrictStr], StrictStr]


class Port(Property):
    """
    Property. Port of this Netconf service.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: StrictInt


class SupportedBy(Relationship):
    """
    Relationship. Network device that supports this Netconf service.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    object: StrictStr


class Netconf(Entity):
    """
    Entity that represents a Netconf service which is supported by a specific network device
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    type: Optional[Literal['Netconf']] = Field(
        'Netconf', description='NGSI-LD Entity identifier. It has to be Netconf'
    )
    address: Address
    capabilities: Optional[Capabilities]
    port: Port
    supported_by: SupportedBy = Field(..., alias='supportedBy')
