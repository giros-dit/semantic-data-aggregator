# generated by datamodel-codegen:
#   filename:  pipelines/task.json

from __future__ import annotations

from enum import Enum
from typing import Literal, Optional

from pydantic import Extra, Field

from ..entity import Entity, Property


class ActionOptions(Enum):
    start = 'START'
    end = 'END'


class StateOptions(Enum):
    building = 'BUILDING'
    cleaned = 'CLEANED'
    failed = 'FAILED'
    running = 'RUNNING'
    stopped = 'STOPPED'


class Action(Property):
    """
    Property. Requested action to applied on the task.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: ActionOptions


class State(Property):
    """
    Property. Current state of the task.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: StateOptions


class Task(Entity):
    """
    Entity that represents a task within the SDA.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    type: Optional[Literal['Task']] = Field(
        'Task', description='NGSI-LD Entity identifier. It has to be Task'
    )
    action: Action
    state: Optional[State]
