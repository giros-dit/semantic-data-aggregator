# generated by datamodel-codegen:
#   filename:  pipelines/clarity/interfaceKPI.json

from __future__ import annotations

from enum import Enum
from typing import Literal, Optional

from pydantic import Extra, Field, StrictInt, StrictStr

from ...entity import Property, Relationship
from ..task import Task


class KpiOptions(Enum):
    throughput = 'throughput'
    packet_loss = 'packet-loss'


class Kpi(Property):
    """
    Property. The KPI to be aggregated.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: KpiOptions


class HasInput(Relationship):
    """
    Relationship. GnmiCollector entity that provides input data to aggregate the interface KPI.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    object: StrictStr


class WindowSize(Property):
    """
    Property. Size of the aggregation window. This value is specified as an integer in milliseconds.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: StrictInt
    unit_code: Optional[Literal['C26']] = Field('C26', alias='unitCode')


class InterfaceKpiAggregator(Task):
    """
    Entity that represents an aggregation of a network interface KPI.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    type: Optional[Literal['InterfaceKPIAggregator']] = Field(
        'InterfaceKPIAggregator',
        description='NGSI-LD Entity identifier. It has to be InterfaceKPIAggregator',
    )
    has_input: HasInput = Field(..., alias='hasInput')
    kpi: Kpi
    window_size: WindowSize = Field(..., alias='windowSize')
