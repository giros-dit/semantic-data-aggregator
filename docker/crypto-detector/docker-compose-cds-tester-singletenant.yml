version: '3'
services:
  kafka:
    image: bitnami/kafka
    hostname: kafka
    container_name: kafka
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_LOG_RETENTION_MS: 10000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    logging:
      driver: none
  zookeeper:
    image: zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181"
    logging:
      driver: none
  crypto-detector:
    build:
      context: .
    hostname: crypto-detector
    container_name: crypto-detector  
    entrypoint: ["python3", "/app/crypto-detector.py", "-b", "kafka:9092", "-c", "cds-input", "-p", "cds-output"]
    #restart: on-failure
    depends_on:
      - zookeeper
      - kafka
  crypto-consumer:
    build:
      context: .
      dockerfile: ./crypto-consumer/compose/Dockerfile
    hostname: crypto-consumer
    container_name: crypto-consumer  
    entrypoint: ["python3", "/app/crypto-consumer.py", "-b", "kafka:9092", "-c", "cds-output"]
    #restart: on-failure
    depends_on:
      - zookeeper
      - kafka
  crypto-producer:
    build:
      context: .
      dockerfile: ./crypto-producer/compose/Dockerfile
    hostname: crypto-producer
    container_name: crypto-producer  
    entrypoint: ["python3", "/app/crypto-producer.py", "-b", "kafka:9092", "-p", "cds-input", "-t", "1"]
    #restart: on-failure
    depends_on:
      - zookeeper
      - kafka