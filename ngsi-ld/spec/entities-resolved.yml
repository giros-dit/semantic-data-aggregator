openapi: 3.0.1
info:
  title: NGSI-LD Entities
  version: latest
components:
  schemas:
    position:
      description: A single position
      type: array
      minItems: 2
      items:
        type: number
    positionArray:
      description: An array of positions
      type: array
      items:
        $ref: "#/paths/~1entities~1/post/requestBody/content/ap\
          plication~1json/schema/properties/location/proper\
          ties/value/oneOf/0/properties/coordinates"
    lineString:
      description: An array of two or more positions
      allOf:
        - $ref: "#/paths/~1entities~1/post/requestBody/content/\
            application~1json/schema/properties/location/pr\
            operties/value/oneOf/1/properties/coordinates"
        - minItems: 2
    linearRing:
      description: An array of four positions where the first equals
        the last
      allOf:
        - $ref: "#/paths/~1entities~1/post/requestBody/content/\
            application~1json/schema/properties/location/pr\
            operties/value/oneOf/1/properties/coordinates"
        - minItems: 4
    polygon:
      description: An array of linear rings
      type: array
      items:
        description: An array of four positions where the first equals
          the last
        allOf:
          - $ref: "#/paths/~1entities~1/post/requestBody/conten\
              t/application~1json/schema/properties/locatio\
              n/properties/value/oneOf/1/properties/coordin\
              ates"
          - minItems: 4
  parameters:
    id:
      name: id
      description: Comma separated list of URIs to be retrieved
      in: query
      required: false
      schema:
        type: string
        format: uri
    type:
      name: type
      description: Comma separated list of Entity type names to be retrieved
      in: query
      required: false
      schema:
        type: string
        minLength: 1
    idPattern:
      name: idPattern
      description: Regular expression that must be matched by Entity ids
      in: query
      required: false
      schema:
        type: string
        format: regexp
    attrs:
      name: attrs
      description: Comma separated list of attribute names (properties or relationships) to
        be retrieved
      in: query
      required: false
      schema:
        type: string
        minLength: 1
    q:
      name: q
      description: Query
      in: query
      required: false
      schema:
        type: string
        minLength: 1
    georel:
      name: georel
      description: Geo-relationship
      in: query
      required: false
      schema:
        anyOf:
          - type: string
            enum:
              - equals
              - disjoint
              - intersects
              - within
              - contains
              - overlaps
          - type: string
            pattern: ^near;((maxDistance==\d+)|(minDistance==\d+))$
    geometry:
      name: geometry
      description: Geometry
      in: query
      required: false
      schema:
        type: string
        enum:
          - Point
          - MultiPoint
          - LineString
          - MultiLineString
          - Polygon
          - MultiPolygon
    coordinates:
      name: coordinates
      description: Coordinates serialized as a string
      in: query
      required: false
      schema:
        oneOf:
          - description: A single position
            type: array
            minItems: 2
            items:
              type: number
          - description: An array of positions
            type: array
            items:
              description: A single position
              type: array
              minItems: 2
              items:
                type: number
          - description: An array of two or more positions
            allOf:
              - description: An array of positions
                type: array
                items:
                  description: A single position
                  type: array
                  minItems: 2
                  items:
                    type: number
              - minItems: 2
          - description: An array of linear rings
            type: array
            items:
              description: An array of four positions where the first equals the last
              allOf:
                - description: An array of positions
                  type: array
                  items:
                    description: A single position
                    type: array
                    minItems: 2
                    items:
                      type: number
                - minItems: 4
    geoproperty:
      name: geoproperty
      description: The name of the property that contains the geo-spatial data that will be
        used to resolve the geoquery
      in: query
      required: false
      schema:
        type: string
        minLength: 1
    csf:
      name: csf
      description: Context Source Filter
      in: query
      required: false
      schema:
        type: string
        minLength: 1
    limit:
      name: limit
      description: Pagination limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
    options:
      name: options
      description: Options dictionary
      in: query
      required: false
      schema:
        type: string
        enum:
          - keyValues
          - sysAttrs
paths:
  /entities/:
    get:
      description: Retrieve a set of entities which matches a specific query from an
        NGSI-LD system
      operationId: api.queryEntities
      tags:
        - Context Information
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/idPattern"
        - $ref: "#/components/parameters/type"
        - $ref: "#/components/parameters/attrs"
        - $ref: "#/components/parameters/q"
        - $ref: "#/components/parameters/georel"
        - $ref: "#/components/parameters/geometry"
        - $ref: "#/components/parameters/coordinates"
        - $ref: "#/components/parameters/geoproperty"
        - $ref: "#/components/parameters/csf"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/options"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/paths/~1entities~1/post/requestBody/content/application~\
                    1json/schema"
              examples:
                exampleFile:
                  externalValue: https://forge.etsi.org/rep/NGSI-LD/NGSI-LD/raw/master/examples/EntityList-example.json
            application/ld+json:
              schema:
                $ref: "#/paths/~1entities~1/get/responses/200/content/application~1\
                  json/schema"

        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    format: uri
                  title:
                    type: string
                  detail:
                    type: string
                required:
                  - type
            application/ld+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    format: uri
                  title:
                    type: string
                  detail:
                    type: string
                required:
                  - type
    post:
      description: Create a new Entity within an NGSI-LD system
      operationId: api.createEntity
      tags:
        - Context Information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                "@context":
                  anyOf:
                    - type: object
                    - type: string
                      format: uri
                    - type: array
                      minItems: 1
                      items:
                        anyOf:
                          - type: string
                            format: uri
                          - type: object
                location:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - GeoProperty
                    value:
                      title: geometry
                      description: One geometry as defined by GeoJSON. Licensed as per
                        original source is
                        https://github.com/fge/sample-json-schemas/blob/master/geojson/geometry.json
                      type: object
                      required:
                        - type
                        - coordinates
                      oneOf:
                        - title: Point
                          properties:
                            type:
                              enum:
                                - Point
                            coordinates:
                              description: A single position
                              type: array
                              minItems: 2
                              items:
                                type: number
                        - title: MultiPoint
                          properties:
                            type:
                              enum:
                                - MultiPoint
                            coordinates:
                              description: An array of positions
                              type: array
                              items:
                                $ref: "#/paths/~1entities~1/post/requestBody/conten\
                                  t/application~1json/schema/properties/locatio\
                                  n/properties/value/oneOf/0/properties/coordin\
                                  ates"
                        - title: LineString
                          properties:
                            type:
                              enum:
                                - LineString
                            coordinates:
                              description: An array of two or more positions
                              allOf:
                                - $ref: "#/paths/~1entities~1/post/requestBody/cont\
                                    ent/application~1json/schema/properties/loc\
                                    ation/properties/value/oneOf/1/properties/c\
                                    oordinates"
                                - minItems: 2
                        - title: MultiLineString
                          properties:
                            type:
                              enum:
                                - MultiLineString
                            coordinates:
                              type: array
                              items:
                                $ref: "#/paths/~1entities~1/post/requestBody/conten\
                                  t/application~1json/schema/properties/locatio\
                                  n/properties/value/oneOf/2/properties/coordin\
                                  ates"
                        - title: Polygon
                          properties:
                            type:
                              enum:
                                - Polygon
                            coordinates:
                              description: An array of linear rings
                              type: array
                              items:
                                $ref: "#/components/schemas/polygon/items"
                        - title: MultiPolygon
                          properties:
                            type:
                              enum:
                                - MultiPolygon
                            coordinates:
                              type: array
                              items:
                                $ref: "#/paths/~1entities~1/post/requestBody/conten\
                                  t/application~1json/schema/properties/locatio\
                                  n/properties/value/oneOf/4/properties/coordin\
                                  ates"
                    observedAt:
                      type: string
                      format: date-time
                    createdAt:
                      type: string
                      format: date-time
                    modifiedAt:
                      type: string
                      format: date-time
                    datasetId:
                      type: string
                      format: uri
                    instanceId:
                      type: string
                      format: uri
                  required:
                    - type
                    - value
                  additionalProperties:
                    anyOf:
                      - $ref: "#/paths/~1entities~1/post/requestBody/content/applic\
                          ation~1json/schema/additionalProperties/anyOf/0"
                      - $ref: "#/paths/~1entities~1/post/requestBody/content/applic\
                          ation~1json/schema/additionalProperties/anyOf/1"
                observationSpace:
                  $ref: "#/paths/~1entities~1/post/requestBody/content/application~\
                    1json/schema/properties/location"
                operationSpace:
                  $ref: "#/paths/~1entities~1/post/requestBody/content/application~\
                    1json/schema/properties/location"
                id:
                  type: string
                  format: uri
                type:
                  type: string
                  pattern: ^((\d|[a-zA-Z]|_)+(:(\d|[a-zA-Z]|_)+)?(#\d+)?)$
                  minLength: 1
                  description: NGSI-LD Name
                createdAt:
                  $ref: "#/paths/~1entities~1/post/requestBody/content/application~\
                    1json/schema/properties/location/properties/createdAt"
                modifiedAt:
                  $ref: "#/paths/~1entities~1/post/requestBody/content/application~\
                    1json/schema/properties/location/properties/modifiedAt"
              required:
                - id
                - type
              additionalProperties:
                anyOf:
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - Property
                      value:
                        anyOf:
                          - type: string
                          - type: number
                          - type: boolean
                          - type: array
                          - type: object
                      observedAt:
                        $ref: "#/paths/~1entities~1/post/requestBody/content/applic\
                          ation~1json/schema/properties/location/properties/obs\
                          ervedAt"
                      createdAt:
                        $ref: "#/paths/~1entities~1/post/requestBody/content/applic\
                          ation~1json/schema/properties/location/properties/cre\
                          atedAt"
                      modifiedAt:
                        $ref: "#/paths/~1entities~1/post/requestBody/content/applic\
                          ation~1json/schema/properties/location/properties/mod\
                          ifiedAt"
                      datasetId:
                        $ref: "#/paths/~1entities~1/post/requestBody/content/applic\
                          ation~1json/schema/properties/location/properties/dat\
                          asetId"
                      instanceId:
                        $ref: "#/paths/~1entities~1/post/requestBody/content/applic\
                          ation~1json/schema/properties/location/properties/ins\
                          tanceId"
                    required:
                      - type
                      - value
                    additionalProperties:
                      anyOf:
                        - $ref: "#/paths/~1entities~1/post/requestBody/content/appl\
                            ication~1json/schema/additionalProperties/anyOf/0"
                        - $ref: "#/paths/~1entities~1/post/requestBody/content/appl\
                            ication~1json/schema/additionalProperties/anyOf/1"
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - Relationship
                      object:
                        type: string
                        format: uri
                      observedAt:
                        $ref: "#/paths/~1entities~1/post/requestBody/content/applic\
                          ation~1json/schema/properties/location/properties/obs\
                          ervedAt"
                      createdAt:
                        $ref: "#/paths/~1entities~1/post/requestBody/content/applic\
                          ation~1json/schema/properties/location/properties/cre\
                          atedAt"
                      modifiedAt:
                        $ref: "#/paths/~1entities~1/post/requestBody/content/applic\
                          ation~1json/schema/properties/location/properties/mod\
                          ifiedAt"
                      datasetId:
                        $ref: "#/paths/~1entities~1/post/requestBody/content/applic\
                          ation~1json/schema/properties/location/properties/dat\
                          asetId"
                      instanceId:
                        $ref: "#/paths/~1entities~1/post/requestBody/content/applic\
                          ation~1json/schema/properties/location/properties/ins\
                          tanceId"
                    required:
                      - type
                      - object
                    additionalProperties:
                      anyOf:
                        - $ref: "#/paths/~1entities~1/post/requestBody/content/appl\
                            ication~1json/schema/additionalProperties/anyOf/0"
                        - $ref: "#/paths/~1entities~1/post/requestBody/content/appl\
                            ication~1json/schema/additionalProperties/anyOf/1"
                  - $ref: "#/paths/~1entities~1/post/requestBody/content/applicatio\
                      n~1json/schema/properties/location"
          application/ld+json:
            schema:
              $ref: "#/paths/~1entities~1/post/requestBody/content/application~1jso\
                n/schema"
      responses:
        "201":
          description: Created. Contains the resource URI of the created Entity
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/paths/~1entities~1/get/responses/400/content/application~1\
                  json/schema"
            application/ld+json:
              schema:
                $ref: "#/paths/~1entities~1/get/responses/400/content/application~1\
                  json/schema"
        "409":
          description: Already exists
          content:
            application/json:
              schema:
                $ref: "#/paths/~1entities~1/get/responses/400/content/application~1\
                  json/schema"
            application/ld+json:
              schema:
                $ref: "#/paths/~1entities~1/get/responses/400/content/application~1\
                  json/schema"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/paths/~1entities~1/get/responses/400/content/application~1\
                  json/schema"
            application/ld+json:
              schema:
                $ref: "#/paths/~1entities~1/get/responses/400/content/application~1\
                  json/schema"
