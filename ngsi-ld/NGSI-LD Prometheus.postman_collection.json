{
	"info": {
		"_postman_id": "85b933bc-8c13-4e08-a437-4fb195bf570c",
		"name": "NGSI-LD Prometheus",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Obtaining Version Information",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{scorpio}}/scorpio/v1/info/",
					"protocol": "http",
					"host": [
						"{{scorpio}}"
					],
					"path": [
						"scorpio",
						"v1",
						"info",
						""
					]
				},
				"description": "You can check if the Scorpio Context Broker is running by making an HTTP request to the exposed port."
			},
			"response": []
		},
		{
			"name": "Create PromLabel",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/ld+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"{{label1}}\",\n    \"type\": \"PromLabel\",\n    \"name\": {\n        \"type\": \"Property\",\n        \"value\": \"job\"\n    },\n    \"instance\": {\n        \"type\": \"Property\",\n        \"value\": \"prometheus\"\n    },\n    \"isLabelOf\": {\n        \"type\": \"Relationship\",\n        \"object\": [\"{{metric1}}\"]\n    },\n    \"@context\": [\n        {\n            \"PromMetric\": \"http://example.com/PromMetric\", \n            \"hasLabels\": \"http://example.com/hasLabels\", \n            \"sample\": \"http://example.com/sample\",\n            \"PromLabel\": \"http://example.com/PromLabel\", \n            \"isLabelOf\": \"http://example.com/isLabelOf\", \n            \"instance\": \"http://example.com/instance\"\n        },\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld\"\n    ]\n}"
				},
				"url": {
					"raw": "http://{{scorpio}}/ngsi-ld/v1/entities/",
					"protocol": "http",
					"host": [
						"{{scorpio}}"
					],
					"path": [
						"ngsi-ld",
						"v1",
						"entities",
						""
					]
				},
				"description": "New context data entities can be created by making a POST request to the `/ngsi-ld/v1/entities` endpoint and supply an `@context` along with structured **NGSI-LD** data.\n\nThe first request will take some time, as the context broker must navigate and load all of the files mentioned in the\n`@context`.\n\nSince the `Content-Type: application/ld+json` the `@context` is supplied in the body of the request. As with all **NGSI-LD** interactions, the core **NGSI-LD** `@context` ([`https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld`](https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld) is implicitly included as well.)\n\nThis means that the actual `@context` is:\n\n```jsonld\n{\n    \"@context\": [\n        \"http://context-provider:3000/data-models/ngsi-context.jsonld\",\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld\"\n    ]\n}\n```\n\nwith the core `@context` being processed **last** and therefore overriding any terms previously defined with the same `@id`."
			},
			"response": []
		},
		{
			"name": "Create PromMetric",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "06535607-a913-405e-a25f-85b1f9d55c1c",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/ld+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"{{metric1}}\",\n    \"type\": \"PromMetric\",\n    \"name\": {\n        \"type\": \"Property\",\n        \"value\": \"prometheus_http_requests_total\"\n    },\n    \"hasLabels\": {\n        \"type\": \"Relationship\",\n        \"object\": [\"{{label1}}\"]\n    },\n    \"sample\": {\n        \"type\": \"Property\",\n        \"value\": \"28.0\",\n        \"observedAt\": \"2020-10-04T12:30:00Z\"\n    },\n    \"@context\": [\n        {\n            \"PromMetric\": \"http://example.com/PromMetric\", \n            \"hasLabels\": \"http://example.com/hasLabels\", \n            \"sample\": \"http://example.com/sample\",\n            \"PromLabel\": \"http://example.com/PromLabel\", \n            \"isLabelOf\": \"http://example.com/isLabelOf\", \n            \"instance\": \"http://example.com/instance\"\n        },\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld\"\n    ]\n}"
				},
				"url": {
					"raw": "http://{{scorpio}}/ngsi-ld/v1/entities/",
					"protocol": "http",
					"host": [
						"{{scorpio}}"
					],
					"path": [
						"ngsi-ld",
						"v1",
						"entities",
						""
					]
				},
				"description": "New context data entities can be created by making a POST request to the `/ngsi-ld/v1/entities` endpoint and supply an `@context` along with structured **NGSI-LD** data.\n\nThe first request will take some time, as the context broker must navigate and load all of the files mentioned in the\n`@context`.\n\nSince the `Content-Type: application/ld+json` the `@context` is supplied in the body of the request. As with all **NGSI-LD** interactions, the core **NGSI-LD** `@context` ([`https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld`](https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld) is implicitly included as well.)\n\nThis means that the actual `@context` is:\n\n```jsonld\n{\n    \"@context\": [\n        \"http://context-provider:3000/data-models/ngsi-context.jsonld\",\n        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.3.jsonld\"\n    ]\n}\n```\n\nwith the core `@context` being processed **last** and therefore overriding any terms previously defined with the same `@id`."
			},
			"response": []
		},
		{
			"name": "Obtain Entity Data by id",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/ld+json",
						"type": "text"
					},
					{
						"key": "Link",
						"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{scorpio}}/ngsi-ld/v1/entities/urn:ngsi-ld:PromMetric:1",
					"protocol": "http",
					"host": [
						"{{scorpio}}"
					],
					"path": [
						"ngsi-ld",
						"v1",
						"entities",
						"urn:ngsi-ld:PromMetric:1"
					]
				},
				"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
			},
			"response": []
		},
		{
			"name": "Obtain Entity Data by type",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/ld+json",
						"type": "text"
					},
					{
						"key": "Link",
						"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{scorpio}}/ngsi-ld/v1/entities/urn:ngsi-ld:PromMetric:1",
					"protocol": "http",
					"host": [
						"{{scorpio}}"
					],
					"path": [
						"ngsi-ld",
						"v1",
						"entities",
						"urn:ngsi-ld:PromMetric:1"
					]
				},
				"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
			},
			"response": []
		},
		{
			"name": "Obtain Entity Data by relationship",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/ld+json"
					},
					{
						"key": "Link",
						"type": "text",
						"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
					}
				],
				"url": {
					"raw": "http://{{scorpio}}/ngsi-ld/v1/entities/?type=PromMetric&q=hasLabels==urn:ngsi-ld:PromLabel:1",
					"protocol": "http",
					"host": [
						"{{scorpio}}"
					],
					"path": [
						"ngsi-ld",
						"v1",
						"entities",
						""
					],
					"query": [
						{
							"key": "type",
							"value": "PromMetric"
						},
						{
							"key": "q",
							"value": "hasLabels==urn:ngsi-ld:PromLabel:1"
						}
					]
				},
				"description": "This example returns the data of `urn:ngsi-ld:Building:farm001`. The NGSI-LD `@context` is supplied as a [`Link` header](https://www.w3.org/wiki/LinkHeader) to define the entities returned. The `ngsi-context.jsonld` `@context` file is just supplying short names for every attribute.\n\nThe full link header syntax can be seen below:\n\n```text\nLink: <https://fiware.github.io/data-models/context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n```\n\nThe standard HTTP `Link` header allows metadata (in this case the `@context`) to be passed in without actually touching\nthe resource in question. In the case of NGSI-LD, the metadata is a file in `application/ld+json` format."
			},
			"response": []
		},
		{
			"name": "Create csource with Link header",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/ld+json"
					},
					{
						"key": "Link",
						"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"urn:ngsi-ld:ContextSourceRegistration:csr1a3458\",\r\n    \"type\": \"ContextSourceRegistration\",\r\n    \"name\": \"cSource1\",\r\n    \"description\": \"cSource Registration for PromMetrics\",\r\n    \"information\": [\r\n        {\r\n            \"entities\": [\r\n                {\r\n                \"type\": \"PromMetric\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"endpoint\": \"http://collector:8080\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{scorpio}}/ngsi-ld/v1/csourceRegistrations/",
					"host": [
						"{{scorpio}}"
					],
					"path": [
						"ngsi-ld",
						"v1",
						"csourceRegistrations",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Query csource by type",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/ld+json",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Link",
						"value": "<{{context.jsonld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\""
					}
				],
				"url": {
					"raw": "{{scorpio}}/ngsi-ld/v1/csourceRegistrations?type=PromMetric",
					"host": [
						"{{scorpio}}"
					],
					"path": [
						"ngsi-ld",
						"v1",
						"csourceRegistrations"
					],
					"query": [
						{
							"key": "type",
							"value": "PromMetric"
						}
					]
				},
				"description": "Get every entity near NEC Labs Heidelberg, with distance up to 360 meters\r\n    NEC Labs Heidelberg coordinates: 8.684783577919006, 49.406131991436396"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "8bd06144-f54f-4106-a9ae-a3926774bd23",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "54c35ac0-4d1f-4b7c-b978-01415903243d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "e648c224-ff7b-4095-a5a1-0e5758f88977",
			"key": "scorpio",
			"value": "localhost:9090"
		},
		{
			"id": "9132fa35-f529-448f-823b-0ad4116623f5",
			"key": "context.jsonld",
			"value": "https://pastebin.com/raw/ueLM6utf"
		},
		{
			"id": "0282c16d-66b7-4d55-8a43-8d703f76872e",
			"key": "label1",
			"value": "urn:ngsi-ld:PromLabel:1"
		},
		{
			"id": "dd45854c-d4a1-4f2c-9143-5e75b4dff826",
			"key": "metric1",
			"value": "urn:ngsi-ld:PromMetric:1"
		}
	],
	"protocolProfileBehavior": {}
}