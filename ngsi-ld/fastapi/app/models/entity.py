# generated by datamodel-codegen:
#   filename:  Entity.json
#   timestamp: 2020-10-15T10:53:14+00:00

from __future__ import annotations

from datetime import datetime
from typing import Any, Dict, List, Optional, Union

from pydantic import AnyUrl, BaseModel, Extra, Field, constr


class DatasetId(BaseModel):
    __root__: AnyUrl


class InstanceId(BaseModel):
    __root__: AnyUrl


class ObservedAt(BaseModel):
    __root__: datetime


class CreatedAt(BaseModel):
    __root__: datetime


class ModifiedAt(BaseModel):
    __root__: datetime


class Relationship(BaseModel):
    class Config:
        extra = Extra.allow

    type: str
    object: AnyUrl
    observedAt: Optional[ObservedAt] = None
    createdAt: Optional[CreatedAt] = None
    modifiedAt: Optional[ModifiedAt] = None
    datasetId: Optional[DatasetId] = None
    instanceId: Optional[InstanceId] = None


class GeoProperty(BaseModel):
    class Config:
        extra = Extra.allow

    type: str
    observedAt: Optional[ObservedAt] = None
    createdAt: Optional[CreatedAt] = None
    modifiedAt: Optional[ModifiedAt] = None
    datasetId: Optional[DatasetId] = None
    instanceId: Optional[InstanceId] = None


class LdContextItem(BaseModel):
    pass


class LdContext(BaseModel):
    __root__: Union[Dict[str, Any], LdContextItem, LdContextItem]


class Name(BaseModel):
    __root__: constr(
        regex='^((\d|[a-zA-Z]|_)+(:(\d|[a-zA-Z]|_)+)?(#\d+)?)$', min_length=1
    )


class Property(BaseModel):
    class Config:
        extra = Extra.allow

    type: str
    value: Union[str, float, bool, List[Any], Dict[str, Any]]
    observedAt: Optional[ObservedAt] = None
    createdAt: Optional[CreatedAt] = None
    modifiedAt: Optional[ModifiedAt] = None
    datasetId: Optional[DatasetId] = None
    instanceId: Optional[InstanceId] = None


class Entity(BaseModel):
    class Config:
        extra = Extra.allow

    _context: Optional[LdContext] = Field(None, alias='@context')
    location: Optional[GeoProperty] = None
    observationSpace: Optional[GeoProperty] = None
    operationSpace: Optional[GeoProperty] = None
    id: AnyUrl
    type: Name
    createdAt: Optional[CreatedAt] = None
    modifiedAt: Optional[ModifiedAt] = None


class entity(Entity):
    pass
