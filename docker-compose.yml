version: '3'
services:
  app-manager:
    build:
        context: .
        dockerfile: ./docker/app-manager/Dockerfile
    hostname: app-manager
    container_name: app-manager
    environment:
      - APP_MANAGER_URI=${APP_MANAGER_URI}
      - BROKER_URI=${BROKER_URI}
      - CONTEXT_CATALOG_URI=${CONTEXT_CATALOG_URI}
      - FLINK_MANAGER_URI=${FLINK_MANAGER_URI}
      - NIFI_URI=${NIFI_URI}
      - NIFI_USERNAME=${NIFI_USERNAME}
      - NIFI_PASSWORD=${NIFI_PASSWORD}
    ports:
      - "8082:8080"
    volumes:
      - ./docker/app-manager/app_manager:/opt/sda/app-manager/app_manager
    depends_on:
      - nifi
      - scorpio
  ceos1:
    image: "ceos-image:4.25.4M"
    hostname: ceos1
    container_name: ceos1
    ports:
      - "6030:6030"
    command: /sbin/init  systemd.setenv=INTFTYPE=eth systemd.setenv=ETBA=1 systemd.setenv=SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT=1 systemd.setenv=CEOS=1 systemd.setenv=EOS_PLATFORM=ceoslab systemd.setenv=container=docker
    privileged: true
    environment:
      INTFTYPE: eth
      ETBA: 1
      SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT: 1
      CEOS: 1
      EOS_PLATFORM: ceoslab
      container: docker
    networks:
      default:
      net1:
      net2:
  ceos2:
    image: "ceos-image:4.25.4M"
    hostname: ceos2
    container_name: ceos2
    ports:
      - "6031:6030"
    command: /sbin/init  systemd.setenv=INTFTYPE=eth systemd.setenv=ETBA=1 systemd.setenv=SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT=1 systemd.setenv=CEOS=1 systemd.setenv=EOS_PLATFORM=ceoslab systemd.setenv=container=docker
    privileged: true
    environment:
      INTFTYPE: eth
      ETBA: 1
      SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT: 1
      CEOS: 1
      EOS_PLATFORM: ceoslab
      container: docker
    networks:
      default:
      net1:
      net2:
  consumer:
    build:
      context: .
      dockerfile: ./docker/consumer/Dockerfile
    hostname: consumer
    container_name: consumer
    ports:
      - "8080"
    volumes:
      - ./docker/consumer/consumer:/opt/sda/consumer/consumer
  context-catalog:
    image: halverneus/static-file-server
    hostname: context-catalog
    container_name: context-catalog
    ports:
      - "8080"
    volumes:
      - ./docker/context-catalog:/web
  complex-publisher:
    build:
      context: .
      dockerfile: ./docker/complex-publishers/Dockerfile
    hostname: complex-publisher
    container_name: complex-publisher
  experimenter:
    build:
      context: .
      dockerfile: ./docker/experimenter/Dockerfile
    hostname: experimenter
    container_name: experimenter
    ports:
      - "8080"
    volumes:
      - ./docker/experimenter/app:/opt/experimenter/app
  flink-jobmanager:
    image: flink:1.14.0-scala_2.12-java11
    hostname: flink-jobmanager
    container_name: flink-jobmanager
    ports:
      - "8084:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
    volumes:
      - ./flink-conf:/flink-conf
  flink-taskmanager:
    image: flink:1.14.0-scala_2.12-java11
    hostname: flink-taskmanager
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 2
  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_DIRS: "/tmp/kafka-logs"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  nifi:
    build:
      context: .
      dockerfile: ./docker/nifi/Dockerfile
    hostname: nifi
    container_name: nifi
    user: root
    environment:
      SINGLE_USER_CREDENTIALS_USERNAME: admin
      # Must be of 12 characters min
      SINGLE_USER_CREDENTIALS_PASSWORD: ctsBtRBKHRAx69EqUghvvgEvjnaLjFEB
    ports:
      - "8443:8443"
      # Used by Prometheus exporter
      - "8444:8444"
    volumes:
      - ./gnmi/gnmic-cfgs:/gnmic-cfgs
      - ./docker/nifi/drivers/jinja-templates:/jinja-templates
      - ./docker/nifi/drivers/nars:/opt/nifi/nifi-current/extensions
      - ./docker/nifi/drivers/yang-models:/opt/nifi/yang-models
  node-exporter-1:
    image: prom/node-exporter
    hostname: node-exporter-1
    container_name: node-exporter-1
    ports:
      - "9100:9100"
    depends_on:
      - prometheus
  node-exporter-2:
    image: prom/node-exporter
    hostname: node-exporter-2
    container_name: node-exporter-2
    ports:
      - "9101:9100"
    depends_on:
      - prometheus
  postgres:
    image: mdillon/postgis
    hostname: postgres
    container_name: postgres
    ports:
      - "5432"
    environment:
      POSTGRES_USER: ngb
      POSTGRES_PASSWORD: ngb
      POSTGRES_DB: ngb
    logging:
      driver: none
  prometheus:
    image: prom/prometheus
    hostname: prometheus
    container_name: prometheus
    ports:
      - "9099:9090"
    volumes:
      - ./docker/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
  scorpio:
    image: scorpiobroker/scorpio:scorpio-aaio_FIWARE_7.9.2
    hostname: scorpio
    container_name: scorpio
    ports:
      - "9090:9090"
    depends_on:
      - kafka
      - postgres
  source-manager:
    build:
        context: .
        dockerfile: ./docker/source-manager/Dockerfile
    hostname: source-manager
    container_name: source-manager
    ports:
      - "8083:8080"
    volumes:
      - ./docker/source-manager/app:/opt/source-manager/app
  weaver:
    build:
      context: .
      dockerfile: ./docker/weaver/Dockerfile
    hostname: weaver
    container_name: weaver
    environment:
      - BROKER_URI=${BROKER_URI}
      - CONTEXT_CATALOG_URI=${CONTEXT_CATALOG_URI}
      - FLINK_MANAGER_URI=${FLINK_MANAGER_URI}
      - NIFI_URI=${NIFI_URI}
      - NIFI_USERNAME=${NIFI_USERNAME}
      - NIFI_PASSWORD=${NIFI_PASSWORD}
      - WEAVER_URI=${WEAVER_URI}
    volumes:
      - ./docker/weaver/weaver:/opt/sda/weaver/weaver
    depends_on:
      - nifi
      - scorpio
  zookeeper:
    image: zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181"
    logging:
      driver: none
    working_dir: /
networks:
  net1:
  net2:
