{
	"info": {
		"_postman_id": "1551d840-16b4-4bfd-acb7-c46692407b49",
		"name": "yangcatalog",
		"description": "This collection was obtained from YANG Catalog's website. For more details, please visit the [Contribute to YANG Catalog](https://yangcatalog.org/contribute.html) page.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Return all metadata for specific module in the catalog",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://yangcatalog.org/api/search/modules/ietf-l3vpn-svc,2018-01-19,ietf",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search",
						"modules",
						"ietf-l3vpn-svc,2018-01-19,ietf"
					]
				},
				"description": "This will search for a specific module and it will produce all the details about the module that yangcatalog contains\n\n/search/modules/<name>,<revision>,<organization>\n\nNote that there are 3 indices"
			},
			"response": []
		},
		{
			"name": "Return all revisions of a specific YANG module",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://yangcatalog.org/api/search/name/ietf-l3vpn-svc",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search",
						"name",
						"ietf-l3vpn-svc"
					]
				},
				"description": "This way you can search for any specific entry in the yangcatalog\n\n/search/<yang-moodule-leaf>/<name>\n\n<yang-module-leaf> can be one of the following:\n'ietf/ietf-wg', 'maturity-level', 'document-name', 'author-email', 'compilation-status', 'namespace', 'conformance-type', 'module-type', 'organization', 'yang-version', 'name', 'revision', 'tree-type', 'belongs-to', 'generated-from'\n\n<name> needs to be anything you are looking for"
			},
			"response": []
		},
		{
			"name": "Return all YANG modules in the catalog",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					}
				],
				"url": {
					"raw": "https://yangcatalog.org/api/search/modules",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search",
						"modules"
					]
				},
				"description": "Search for all the modules in yangcatalog\n\nWarning!!!\nThis might take a long time since there might be a lot of data\n\nOn Dec 2017, we speak about 2878 YANG modules, with some of them having multiple revisions."
			},
			"response": []
		},
		{
			"name": "Return all YANG modules for the ISR4000 running IOS 16.6.2",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					}
				],
				"url": {
					"raw": "https://yangcatalog.org/api/search/vendors/vendor/cisco/platforms/platform/ISR4000/software-versions/software-version/16.6.2",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search",
						"vendors",
						"vendor",
						"cisco",
						"platforms",
						"platform",
						"ISR4000",
						"software-versions",
						"software-version",
						"16.6.2"
					]
				},
				"description": "Searching for all the modules for a specific vendor. This will not produce all the module details. You can search for any part of this request as a example you can serach for vendor cisco and it will produce response with all the platforms, versions and flavors.\n/search/vendors/vendor/<vendor-id>/platforms/platform/<platform-id>/software-versions/software-version/<software-version-id>/software-flavors/software-flavor/<software-flavor-id>"
			},
			"response": []
		},
		{
			"name": "Check semantic differences between ISR4000 IOS 16.6.1 and 16.6.2",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"input\": {\n      \"old\":{\n    \"implementations\": {\n        \"implementation\" :[\n        {\n           \"vendor\": \"cisco\", \n           \"software-version\": \"16.6.1\",\n           \"platform\": \"ISR4000\"\n        }]\n    }\n     },\n     \n    \"new\": {\n    \"implementations\": {\n        \"implementation\" :[\n        {\n           \"vendor\": \"cisco\", \n           \"software-version\": \"16.6.2\",\n           \"platform\": \"ISR4000\"\n        }]\n    }\n    }\n   }\n}"
				},
				"url": {
					"raw": "https://yangcatalog.org/api/check-semantic-version",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"check-semantic-version"
					]
				},
				"description": "This request requires a body with root input element that contains two child elements. Old and new. In those elements you can specify any condition you want from your modules and it will produce a list of modules that are same in old and new container but have different semantic version. It will also produce a information of why the semantic version is different as well as diff of yang tree and yang module itself"
			},
			"response": []
		},
		{
			"name": "Check sematic difference for same module with different revision",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"input\": {\n        \"old\":{\n            \"name\": \"Cisco-IOS-XE-policy\",\n            \"revision\": \"2017-06-07\",\n            \"organization\": \"cisco\"\n        },\n     \n        \"new\": {\n            \"name\": \"Cisco-IOS-XE-policy\",\n            \"revision\": \"2017-08-21\",\n            \"organization\": \"cisco\"\n        }\n   }\n}"
				},
				"url": {
					"raw": "https://yangcatalog.org/api/check-semantic-version",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"check-semantic-version"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return all YANG modules and metadata for IOS XE 16.6.2",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"input\":{\n      \"implementations\":{\n         \"implementation\":[\n            {\n               \"vendor\":\"cisco\",\n               \"software-version\":\"16.6.2\"\n            }\n         ]\n      }\n   }\n}"
				},
				"url": {
					"raw": "https://yangcatalog.org/api/search-filter",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search-filter"
					]
				},
				"description": "This is a request that needs to have body specified with root named input and its child should contain any conditions that output module needs to meet. These conditions must be compliant with yang-catalog.yang module."
			},
			"response": []
		},
		{
			"name": "For a specific IETF draft, provide the emails addresses of all dependent YANG modules",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"input\":{\n    \"dependencies\": [{\n    \t\"name\": \"ietf-inet-types\"\n    }]\n  }\n}"
				},
				"url": {
					"raw": "https://yangcatalog.org/api/search-filter/author-email",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search-filter",
						"author-email"
					]
				},
				"description": "This request is same as serach-filter exept it will produce set of names requested in the path. As an example this specific request will produce set of author-emails of the modules that has a dependencie on ietf-routing\n\n/search-filter/<yang-catalog-leaf>\n\n<yang-catalog-leaf> leaf that will be serched for"
			},
			"response": []
		},
		{
			"name": "Search for all module names with ietf-routing dependencie",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"input\":{\n    \"dependencies\": [{\"name\": \"ietf-inet-types\"\n    }]\n  }\n}"
				},
				"url": {
					"raw": "https://yangcatalog.org/api/search-filter/name",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search-filter",
						"name"
					]
				},
				"description": "This request is same as serach-filter exept it will produce set of names requested in the path. As an example this specific request will produce set of author-emails of the modules that has a dependencie on ietf-routing\n\n/search-filter/<yang-catalog-leaf>\n\n<yang-catalog-leaf> leaf that will be serched for"
			},
			"response": []
		},
		{
			"name": "Return all entries with the YANG module \"vendor\" branch",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					}
				],
				"url": {
					"raw": "https://yangcatalog.org/api/search/vendors",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search",
						"vendors"
					]
				},
				"description": "Search for all the vendors in yangcatalog"
			},
			"response": []
		},
		{
			"name": "Return all vendors and organizations that contributed to yangcatalog",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					}
				],
				"url": {
					"raw": "https://yangcatalog.org/api/contributors",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"contributors"
					]
				},
				"description": "This request requires a body with root input element that contains two child elements. Old and new. In those elements you can specify any condition you want from your modules and it will produce a list of modules that are same in old and new container but have different semantic version. It will also produce a information of why the semantic version is different as well as diff of yang tree and yang module itself"
			},
			"response": []
		},
		{
			"name": "Return all YANG modules and all entries with the YANG module \"vendor\" branch",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					}
				],
				"url": {
					"raw": "https://yangcatalog.org/api/search/catalog",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search",
						"catalog"
					]
				},
				"description": "Search for all the data that are in yangcatalog\n\nWarning!!!\nThis might take a long time since there might be a lot of data"
			},
			"response": []
		},
		{
			"name": "Return all latest revisions from IETF YANG modules",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Content-Type",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					}
				],
				"url": {
					"raw": "https://yangcatalog.org/api/search/organization/ietf?latest-revision=True",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search",
						"organization",
						"ietf"
					],
					"query": [
						{
							"key": "latest-revision",
							"value": "True"
						}
					]
				},
				"description": "Search for anything with \"?latest-revision=True\" argument for receiving only latest revision of each module\n"
			},
			"response": []
		},
		{
			"name": "Return all latest revisions from IEEE YANG modules",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"input\": {\r\n  \"organization\": \"ieee\"\r\n  }\r\n}"
				},
				"url": {
					"raw": "https://yangcatalog.org/api/search-filter?latest-revision=True",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search-filter"
					],
					"query": [
						{
							"key": "latest-revision",
							"value": "True"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Return all YANG modules that are common between ISR4000 IOS 16.6.1 and 16.6.2",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.yang.data+json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"input\": {\n      \"first\":{\n           \"implementations\": {\n               \"implementation\" :[{\n                    \"vendor\": \"cisco\", \n                    \"software-version\": \"16.6.1\",\n                    \"platform\": \"ISR4000\"\n                }]\n            }\n        },\n        \"second\": {\n           \"implementations\": {\n               \"implementation\" :[{\n                   \"vendor\": \"cisco\", \n                    \"software-version\": \"16.6.2\",\n                    \"platform\": \"ISR4000\"\n                }]\n            }\n        }\n    }\n}"
				},
				"url": {
					"raw": "https://yangcatalog.org/api/get-common",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"get-common"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return all IETF YANG modules in the catalog",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"input\": {\r\n  \"organization\": \"ietf\"\r\n  }\r\n}"
				},
				"url": {
					"raw": "https://yangcatalog.org/api/search-filter",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search-filter"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return all IEEE YANG modules in the catalog",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"input\": {\r\n  \"organization\": \"ieee\"\r\n  }\r\n}"
				},
				"url": {
					"raw": "https://yangcatalog.org/api/search-filter",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search-filter"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return all openconfig YANG modules in the catalog",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"input\": {\r\n  \"organization\": \"openconfig\"\r\n  }\r\n}"
				},
				"url": {
					"raw": "https://yangcatalog.org/api/search-filter",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search-filter"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return all openconfig YANG modules for the ISR4000 IOS 16.6.2",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"input\": {\r\n  \"organization\": \"openconfig\",\r\n  \"implementations\": {\r\n    \"implementation\" :[\r\n    {\r\n      \"vendor\": \"cisco\",\r\n      \"software-version\": \"16.6.2\",\r\n      \"platform\": \"ISR4000\"\r\n    }]\r\n    }\r\n  }\r\n}"
				},
				"url": {
					"raw": "https://yangcatalog.org/api/search-filter",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search-filter"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return only latest revision modules for ietf organization ",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "",
							"type": "string"
						},
						{
							"key": "password",
							"value": "",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46WUBuZ19hZG0xbi0+KHBhU1Mp"
					}
				],
				"url": {
					"raw": "https://yangcatalog.org/api/search/organization/ietf?latest-revision=True",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"search",
						"organization",
						"ietf"
					],
					"query": [
						{
							"key": "latest-revision",
							"value": "True"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Return a status of a specific job id",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					}
				],
				"url": {
					"raw": "https://yangcatalog.org/api/job/12asdf56asdf132sdf5asd4f86a",
					"protocol": "https",
					"host": [
						"yangcatalog",
						"org"
					],
					"path": [
						"api",
						"job",
						"12asdf56asdf132sdf5asd4f86a"
					]
				},
				"description": "Requesting a status of a job-id"
			},
			"response": []
		}
	]
}