version: '3'
services:
  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    hostname: consumer
    container_name: consumer
    ports:
      - "8081:8080"
    volumes:
      - ./consumer/app:/app
  context-catalog:
    image: halverneus/static-file-server
    hostname: context-catalog
    container_name: context-catalog
    ports:
      - "8082:8080"
    volumes:
      - ./context-catalog:/web
  flink-jobmanager:
    image: flink:latest
    hostname: flink-jobmanager
    container_name: flink-jobmanager
    ports:
      - "8084:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
    volumes:
      - ./flink-conf:/flink-conf
  flink-taskmanager:
    image: flink:latest
    hostname: flink-taskmanager
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 2
  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_DIRS: "/tmp/kafka-logs"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  nifi:
    build:
      context: ./nifi
      dockerfile: Dockerfile
    hostname: nifi
    container_name: nifi
    user: root
    ports:
      - "8080:8080"
    volumes:
      - ./gnmic-cfgs:/gnmic-cfgs
      - ./nifi:/opt/aggregator
  node-exporter-1:
    image: prom/node-exporter
    hostname: node-exporter-1
    container_name: node-exporter-1
    ports:
      - "9100:9100"
    depends_on:
      - prometheus
  node-exporter-2:
    image: prom/node-exporter
    hostname: node-exporter-2
    container_name: node-exporter-2
    ports:
      - "9101:9100"
    depends_on:
      - prometheus
  postgres:
    image: mdillon/postgis
    hostname: postgres
    container_name: postgres
    ports:
      - "5432"
    environment:
      POSTGRES_USER: ngb
      POSTGRES_PASSWORD: ngb
      POSTGRES_DB: ngb
    logging:
      driver: none
  prometheus:
    image: prom/prometheus
    hostname: prometheus
    container_name: prometheus
    ports:
      - "9099:9090"
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
  scorpio:
    image: scorpiobroker/scorpio:scorpio-aaio_FIWARE_7.9.2
    hostname: scorpio
    container_name: scorpio
    ports:
      - "9090:9090"
    depends_on:
      - kafka
      - postgres
  stream-catalog:
    image: halverneus/static-file-server
    hostname: stream-catalog
    container_name: stream-catalog
    ports:
      - "8083:8080"
    volumes:
      - ./stream-catalog:/web
  weaver:
    build:
      context: ./weaver
    hostname: weaver
    container_name: weaver
    volumes:
      - ./weaver/app:/app
      - ./gnmic-cfgs:/gnmic-cfgs
    depends_on:
      - nifi
      - scorpio
  zookeeper:
    image: zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181"
    logging:
      driver: none
    working_dir: /
  ceos1:
    image: "ceos-image:4.24.4M"
    hostname: ceos1
    container_name: ceos1
    ports:
      - "6030:6030"
    command: /sbin/init  systemd.setenv=INTFTYPE=eth systemd.setenv=ETBA=1 systemd.setenv=SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT=1 systemd.setenv=CEOS=1 systemd.setenv=EOS_PLATFORM=ceoslab systemd.setenv=container=docker
    privileged: true
    environment:
      INTFTYPE: eth
      ETBA: 1
      SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT: 1
      CEOS: 1
      EOS_PLATFORM: ceoslab
      container: docker
    networks:
      default:
      net1:
      net2:
  ceos2:
    image: "ceos-image:4.24.4M"
    hostname: ceos2
    container_name: ceos2
    ports:
      - "6031:6030"
    command: /sbin/init  systemd.setenv=INTFTYPE=eth systemd.setenv=ETBA=1 systemd.setenv=SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT=1 systemd.setenv=CEOS=1 systemd.setenv=EOS_PLATFORM=ceoslab systemd.setenv=container=docker
    privileged: true
    environment:
      INTFTYPE: eth
      ETBA: 1
      SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT: 1
      CEOS: 1
      EOS_PLATFORM: ceoslab
      container: docker
    networks:
      default:
      net1:
      net2:
networks:
  net1:
  net2:
  gnmic-net:
    driver: bridge
