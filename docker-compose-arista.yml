version: '3'
services:
  context-catalog:
    image: halverneus/static-file-server
    hostname: context-catalog
    container_name: context-catalog
    ports:
      - "8082:8080"
    volumes:
      - ./context-catalog:/web
  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_DIRS: "/tmp/kafka-logs"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  nifi:
    #image: apache/nifi
    build:
      context: ./nifi
      dockerfile: Dockerfile
    hostname: nifi
    container_name: nifi
    user: root
    ports:
      - "8080:8080"
    volumes:
      - ./gnmic-cfgs:/gnmic-cfgs
      - ./nifi:/opt/aggregator
  postgres:
    image: mdillon/postgis
    hostname: postgres
    container_name: postgres
    ports:
      - "5432"
    environment:
      POSTGRES_USER: ngb
      POSTGRES_PASSWORD: ngb
      POSTGRES_DB: ngb
    logging:
      driver: none
  schema-registry:
    image: schema-registry:0.9.0
    hostname: schema-registry
    container_name: schema-registry
    environment:
      DB_TYPE: "postgresql"
      DATA_SRC_CLASS_NAME: "org.postgresql.ds.PGSimpleDataSource"
      DB_URL: "jdbc:postgresql://postgres/ngb"
      DB_USER: ngb
      DB_PASSWORD: ngb
      REGISTRY_HEAP_OPTS: "-Xmx1G -Xms1G"
    ports:
      - "9010:9090"
      - "9011:9091"
    depends_on:
      - postgres
  scorpio:
    image: scorpiobroker/scorpio:scorpio-aaio_FIWARE_7.9.2
    hostname: scorpio
    container_name: scorpio
    ports:
      - "9090:9090"
    depends_on:
      - kafka
      - postgres
  weaver:
    build:
      context: ./weaver
    hostname: weaver
    container_name: weaver
    volumes:
      - ./weaver/app:/app
      - ./gnmic-cfgs:/gnmic-cfgs
    depends_on:
      - nifi
      - scorpio
  zookeeper:
    image: zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181"
    logging:
      driver: none
    working_dir: /
  ceos1:
    image: "ceos-image:4.24.5M"
    hostname: ceos1
    container_name: ceos1
    ports:
      - "6030:6030"
    command: /sbin/init  systemd.setenv=INTFTYPE=eth systemd.setenv=ETBA=1 systemd.setenv=SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT=1 systemd.setenv=CEOS=1 systemd.setenv=EOS_PLATFORM=ceoslab systemd.setenv=container=docker
    privileged: true
    environment:
      INTFTYPE: eth
      ETBA: 1
      SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT: 1
      CEOS: 1
      EOS_PLATFORM: ceoslab
      container: docker
    networks:
      default:
      net1:
      net2:
  ceos2:
    image: "ceos-image:4.24.5M"
    hostname: ceos2
    container_name: ceos2
    ports:
      - "6031:6030"
    command: /sbin/init  systemd.setenv=INTFTYPE=eth systemd.setenv=ETBA=1 systemd.setenv=SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT=1 systemd.setenv=CEOS=1 systemd.setenv=EOS_PLATFORM=ceoslab systemd.setenv=container=docker
    privileged: true
    environment:
      INTFTYPE: eth
      ETBA: 1
      SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT: 1
      CEOS: 1
      EOS_PLATFORM: ceoslab
      container: docker
    networks:
      default:
      net1:
      net2:
networks:
  net1:
  net2:
  gnmic-net:
    driver: bridge
